{"version":3,"sources":["context/RecipeContext.js","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","images/profileIcon.svg","images/shareIcon.svg","context/RecipeProvider.js","images/searchIcon.svg","components/SearchBar.jsx","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","pages/Login.jsx","components/Header.jsx","components/Footer.jsx","components/RecipeCard.jsx","components/Categories.jsx","components/FiltersNotFound.jsx","pages/Foods/Food.jsx","pages/Drinks/Drinks.jsx","components/FavoriteButton.jsx","components/IngredientsList.jsx","components/RecipeInstructions.jsx","components/RecomendationCard.jsx","components/ShareButton.jsx","components/StartButton.jsx","pages/Foods/FoodRecipes.jsx","pages/Drinks/DrinkRecipes.jsx","services/foodAPI.jsx","auxiliar/AuxiliarFunctions.jsx","pages/Foods/FoodInProgress.jsx","services/drinkAPI.jsx","pages/Drinks/DrinkInProgress.jsx","pages/Explore/ExploreMenu.jsx","pages/Explore/ExploreFoods.jsx","pages/Explore/ExploreDrinks.jsx","components/IngredientCard.jsx","pages/Explore/ExploreFoodsRecipes.jsx","pages/Explore/ExploreDrinksRecipes.jsx","pages/Explore/ExploreByPlaces.jsx","pages/Profile/Profile.jsx","pages/Profile/Favorites.jsx","pages/Profile/MadeRecipes.jsx","pages/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["RecipeContext","createContext","module","exports","RecipeProvider","children","useState","meal","setMeal","drink","setDrink","page","setPage","meals","drinks","categories","setCategories","filter","setFilter","fetchMeal","a","method","option","search","mealURL","fetch","then","response","json","mealRecipes","mealResponse","fetchDrink","drinkURL","drinkRecipes","drinkResponse","context","alertTrigger","global","alert","fetchRandom","url","randomURL","randomRecipe","fetchCategories","type","key","CATEGORY_URL","category","categoriesResponse","Provider","value","SearchBar","useContext","searchText","selectedOption","data","setData","history","useHistory","handleCheck","event","target","redirectTo","length","push","idDrink","idMeal","fetchRecipe","useEffect","className","data-testid","labelText","name","onChange","htmlFor","id","onClick","Login","email","setEmail","password","setPassword","disabled","setDisabled","testPassword","testEmail","test","validadeEmailPassword","src","profileIcon","alt","localStorage","setItem","JSON","stringify","Header","title","showSearchBtn","showSearchBar","setShowSearchBar","searchIcon","Footer","to","mealIcon","drinkIcon","exploreIcon","RecipeCard","props","infos","infoArray","image","recipes","slice","map","recipe","index","Card","style","borderRadius","Img","ImgOverlay","Title","Categories","onAll","shownCategories","strCategory","FiltersNotFound","Food","state","selected","setSelected","parentNode","forEach","item","classList","remove","toggle","All","Drinks","handleClick","FavoriteButton","isFavorite","setIsFavorite","favoriteRecipes","setFavoriteRecipes","getItem","parse","isFav","some","checkIfIsFavorite","area","strArea","alcoholicOrNot","strAlcoholic","blackHeartIcon","whiteHeartIcon","IngredientsList","ingredients","ingredient","Object","keys","includes","measure","RecipeInstructions","strInstructions","RecomendationCard","recomendations","sixRecipes","indexCards","setIndexCards","prevNumber","hidden","ShareButton","testid","clipBoard","linkCopy","setLinkCopy","setTimeout","clipboardCopy","shareIcon","StartButton","location","inProgress","FoodRecipes","match","params","setRecipe","setRecomendations","isLoading","setIsLoading","setInProgress","fetchRecipeDetail","listMeal","listRecomendations","inProgressRecipes","cocktails","progress","checkInProgress","strMealThumb","strMeal","window","href","pathname","DrinkRecipes","listDrink","strDrinkThumb","strDrink","FOOD_BY_ID","fetchURL","fetchFoodById","getFavorites","allFavorites","favImageWhite","find","favImageBlack","handleFavoriteAuxiliar","objSave","setIcon","icon","actual","FoodinProgress","localStorageChecked","getLocalStorage","storage","auxiliar","foodInfo","setFoodInfo","setIngredients","disable","setDisable","link","setLink","checkArray","setCheckArray","arr","i","itemIngredient","itemMeasure","strMeasure","strIngredient","getLocal","objeto","saveInLocal","handleFavorite","handleLinks","String","split","input","document","createElement","body","appendChild","removeChild","verifyChecked","food","shareImage","ingrID","checked","e","querySelectorAll","inputs","textContent","riskCompleteds","dateNow","Date","formatDate","objToSave","tagFormat","strTags","doneDate","tags","doneRecipes","DRINK_BY_ID","fetchDrinkById","DrinkInProgress","drinkInfo","setDrinkInfo","ExploreMenu","ExploreFoods","ExploreDrinks","IngredientCard","list","setKey","setType","ExploreFoodsRecipes","ingredientsList","setIngredientsList","setIsloading","fetchIngredients","INGREDIENTS_LIST_SIZE","ExploreDrinksRecipes","ExploreByPlaces","areas","setAreas","selectValue","setSelectValue","getAreas","fetchAreas","handleSelect","Profile","localEmail","clear","Favorites","recipeFilter","setRecipesFilter","render","setRender","removeFav","filterFood","filterDrinks","rec","MadeRecipes","recipesFilter","console","log","madeRecipes","tag","NotFound","App","exact","path","component","FoodInProgress","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b34c29ea.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst RecipeContext = createContext();\n\nexport default RecipeContext;\n","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport RecipeContext from './RecipeContext';\n\nfunction RecipeProvider({ children }) {\n  const [meal, setMeal] = useState([]);\n  const [drink, setDrink] = useState([]);\n  const [page, setPage] = useState('');\n  const [categories, setCategories] = useState({ meals: [], drinks: [] });\n  const [filter, setFilter] = useState('');\n\n  const fetchMeal = async (method = 'search', option = 's', search = '') => {\n    const mealURL = 'https://www.themealdb.com/api/json/v1/1/'\n    + `${method}.php?${option}=${search}`;\n    const mealRecipes = await fetch(mealURL).then((response) => response.json());\n    const mealResponse = mealRecipes.meals;\n    setMeal(mealResponse);\n    return mealResponse;\n  };\n\n  const fetchDrink = async (method = 'search', option = 's', search = '') => {\n    const drinkURL = 'https://www.thecocktaildb.com/api/json/v1/1/'\n    + `${method}.php?${option}=${search}`;\n    const drinkRecipes = await fetch(drinkURL).then((response) => response.json());\n    const drinkResponse = drinkRecipes.drinks;\n    setDrink(drinkResponse);\n    return drinkResponse;\n  };\n\n  const fetchRandom = async (url) => {\n    const randomURL = `https://www.${url}.com/api/json/v1/1/random.php`;\n    const randomRecipe = await fetch(randomURL).then((response) => response.json());\n    return url === 'themealdb' ? randomRecipe.meals : randomRecipe.drinks;\n  };\n\n  const alertTrigger = () => {\n    global.alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n  };\n\n  const fetchCategories = async (type, key) => {\n    const CATEGORY_URL = `https://www.the${type}db.com/api/json/v1/1/list.php?c=list`;\n    const category = await fetch(CATEGORY_URL).then((response) => response.json());\n    const categoriesResponse = category[key];\n    setCategories({ ...categories, [key]: categoriesResponse });\n  };\n\n  const context = {\n    alertTrigger,\n    fetchRandom,\n    fetchMeal,\n    fetchDrink,\n    setPage,\n    fetchCategories,\n    setFilter,\n    meal,\n    drink,\n    page,\n    categories,\n    filter,\n  };\n\n  return (\n    <RecipeContext.Provider value={ context }>\n      { children }\n    </RecipeContext.Provider>\n  );\n}\n\nRecipeProvider.propTypes = {\n  children: propTypes.node.isRequired,\n};\n\nexport default RecipeProvider;\n","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","import React, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\n\nimport '../styles/SearchBar.css';\n\nfunction SearchBar() {\n  const {\n    alertTrigger,\n    fetchDrink,\n    fetchMeal,\n    page,\n    meal,\n    drink,\n  } = useContext(RecipeContext);\n\n  const [data, setData] = useState({\n    searchText: '',\n    selectedOption: '',\n  });\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    setData({\n      ...data,\n      searchText: event.target.value,\n    });\n  };\n\n  const handleCheck = (event) => {\n    setData({\n      ...data,\n      selectedOption: event.target.value,\n    });\n  };\n\n  const mealRedirect = () => {\n    const goTo = meal.length;\n    const magicNumber = 1;\n\n    if (goTo === magicNumber) {\n      history.push(`/comidas/${meal[0].idMeal}`);\n    }\n  };\n\n  const drinkRedirect = () => {\n    const goTo = drink.length;\n    const magicNumber = 1;\n\n    if (goTo === magicNumber) {\n      history.push(`/bebidas/${drink[0].idDrink}`);\n    }\n  };\n\n  const redirectTo = () => {\n    if (page === 'comidas') {\n      return mealRedirect();\n    } if (page === 'bebidas') {\n      return drinkRedirect();\n    }\n  };\n\n  const warningTo = () => {\n    if (meal === null || drink === null) {\n      alertTrigger();\n    } else {\n      redirectTo();\n    }\n  };\n\n  const fetchRecipe = (method, option, search) => {\n    if (page === 'comidas') {\n      return fetchMeal(method, option, search);\n    } if (page === 'bebidas') {\n      return fetchDrink(method, option, search);\n    }\n  };\n\n  const handleClick = () => {\n    if (data.selectedOption === 'firstLetter' && data.searchText.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    } if (data.selectedOption === 'ingredient') {\n      fetchRecipe('filter', 'i', data.searchText);\n    } if (data.selectedOption === 'name') {\n      fetchRecipe('search', 's', data.searchText);\n    } if (data.selectedOption === 'firstLetter') {\n      fetchRecipe('search', 'f', data.searchText);\n    }\n  };\n\n  useEffect(() => {\n    warningTo();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [meal, drink]);\n\n  return (\n    <div className=\"searchBar-container\">\n      <input\n        data-testid=\"search-input\"\n        labelText=\"Procurar...\"\n        name=\"search\"\n        onChange={ handleChange }\n      />\n      <div>\n        <div>\n          <label htmlFor=\"byIngridient\">\n            <input\n              data-testid=\"ingredient-search-radio\"\n              id=\"byIngridient\"\n              name=\"radioBtn\"\n              type=\"radio\"\n              value=\"ingredient\"\n              onClick={ handleCheck }\n            />\n            <p>Ingrediente</p>\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"byName\">\n            <input\n              data-testid=\"name-search-radio\"\n              id=\"byName\"\n              name=\"radioBtn\"\n              type=\"radio\"\n              value=\"name\"\n              onClick={ handleCheck }\n            />\n            <p>Nome</p>\n          </label>\n        </div>\n        <label htmlFor=\"byFirstLetter\">\n          <input\n            data-testid=\"first-letter-search-radio\"\n            id=\"byFirstLetter\"\n            name=\"radioBtn\"\n            type=\"radio\"\n            value=\"firstLetter\"\n            onClick={ handleCheck }\n          />\n          <p>Primeira Letra</p>\n        </label>\n      </div>\n      <div className=\"search-btn\">\n        <button\n          data-testid=\"exec-search-btn\"\n          type=\"button\"\n          onClick={ handleClick }\n        >\n          Buscar\n        </button>\n      </div>\n    </div>\n  );\n}\n\nSearchBar.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default SearchBar;\n","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport profileIcon from '../images/profileIcon.svg';\n/* import wallPaperFood from '../images/wallPaperFood.jpg'; */\n\nimport '../styles/Login.css';\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const history = useHistory();\n\n  const validadeEmailPassword = () => {\n    const MIN_CHARACTERS_PASSWORD = 6;\n\n    const testPassword = password.length > MIN_CHARACTERS_PASSWORD;\n    const testEmail = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w\\w+)+$/.test(email);\n    return testPassword && testEmail ? setDisabled(false) : setDisabled(true);\n  };\n  useEffect(() => {\n    validadeEmailPassword();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [email, password]);\n\n  const handleSubmit = () => {\n    localStorage.setItem('mealsToken', JSON.stringify(1));\n    localStorage.setItem('cocktailsToken', JSON.stringify(1));\n    localStorage.setItem('user', JSON.stringify({ email }));\n    history.push('/comidas');\n  };\n\n  return (\n    <div className=\"container-login\">\n      <div className=\"login-main\">\n        <img src={ profileIcon } alt=\"user\" />\n        <h2 className=\"login-title\">Login</h2>\n        <form className=\"form-container\">\n          <label htmlFor=\"email\">\n            <p>Email:</p>\n            <input\n              name=\"email\"\n              type=\"email\"\n              data-testid=\"email-input\"\n              id=\"email\"\n              value={ email }\n              onChange={ (event) => setEmail(event.target.value) }\n            />\n          </label>\n          <label htmlFor=\"password\">\n            <p>Senha:</p>\n            <input\n              name=\"password\"\n              type=\"password\"\n              data-testid=\"password-input\"\n              id=\"password\"\n              value={ password }\n              onChange={ (event) => setPassword(event.target.value) }\n            />\n          </label>\n          <div>\n            <button\n              id=\"login-button\"\n              type=\"button\"\n              data-testid=\"login-submit-btn\"\n              disabled={ disabled }\n              onClick={ handleSubmit }\n            >\n              Entrar\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBar from './SearchBar';\n\nimport '../styles/Header.css';\n\nfunction Header({ title, showSearchBtn = false }) {\n  const history = useHistory();\n  const [showSearchBar, setShowSearchBar] = useState(false);\n\n  return (\n    <header>\n      <div className=\"header\">\n        <button\n          className=\"header-button\"\n          type=\"button\"\n          onClick={ () => history.push('/perfil') }\n        >\n          <img src={ profileIcon } alt=\"profile\" data-testid=\"profile-top-btn\" />\n        </button>\n        <h1 className=\"page-title\" data-testid=\"page-title\">{title}</h1>\n        { showSearchBtn && (\n          <button\n            className=\"header-button\"\n            type=\"button\"\n            onClick={ () => setShowSearchBar(!showSearchBar) }\n          >\n            <img src={ searchIcon } alt=\"searchIcon\" data-testid=\"search-top-btn\" />\n          </button>\n        )}\n      </div>\n      { showSearchBar && <SearchBar /> }\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  showSearchBtn: PropTypes.bool.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\nimport '../styles/Footer.css';\n\nconst Footer = () => (\n  <footer data-testid=\"footer\" className=\"fixedbottom\">\n    <Link\n      to=\"/comidas\"\n    >\n      <img\n        src={ mealIcon }\n        alt=\"meal\"\n        data-testid=\"food-bottom-btn\"\n      />\n    </Link>\n\n    <Link\n      to=\"/bebidas\"\n    >\n      <img\n        src={ drinkIcon }\n        alt=\"drinks\"\n        data-testid=\"drinks-bottom-btn\"\n      />\n    </Link>\n    <Link\n      to=\"/explorar\"\n    >\n      <img\n        alt=\"explore\"\n        src={ exploreIcon }\n        data-testid=\"explore-bottom-btn\"\n      />\n    </Link>\n  </footer>\n);\nexport default Footer;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../styles/RecipeCard.css';\n\nimport { Card } from 'react-bootstrap';\n\nfunction RecipeCard(props) {\n  const CARDS_QUANTITY = 12;\n  const { infos } = props;\n  const [infoArray, id, image, name, type] = infos;\n  if (!infoArray) return <div />;\n  const recipes = infoArray.slice(0, CARDS_QUANTITY);\n  return (\n    <section className=\"cards-section\">\n      {recipes.map((recipe, index) => (\n        <Link className=\"cards\" key={ recipe[`${id}`] } to={ `/${type}/${recipe[id]}` }>\n          <Card\n            className=\"card-btn\"\n            id={ recipe[id] }\n            style={ { borderRadius: '10px' } }\n            data-testid={ `${index}-recipe-card` }\n          >\n            <Card.Img\n              style={ { borderRadius: '10px' } }\n              className=\"card-image\"\n              src={ recipe[`${image}`] }\n              alt=\"food\"\n              value=\"teste\"\n              data-testid={ `${index}-card-img` }\n            />\n            <Card.ImgOverlay className=\"card-title-overlay\">\n              <Card.Title\n                className=\"card-title\"\n                data-testid={ `${index}-card-name` }\n              >\n                <h4>{recipe[`${name}`]}</h4>\n              </Card.Title>\n            </Card.ImgOverlay>\n          </Card>\n        </Link>\n      ))}\n    </section>\n  );\n}\n\nRecipeCard.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n  infos: PropTypes.shape({\n    slice: PropTypes.func,\n  }).isRequired,\n}.isRequired;\n\nexport default RecipeCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/Menu.css';\n\nfunction Categories(props) {\n  const { categories, onClick, onAll } = props;\n  const BTN_QUANTITY = 5;\n  const shownCategories = categories.slice(0, BTN_QUANTITY);\n\n  return (\n    <div className=\"menu-categories\">\n      {shownCategories.map((category, index) => (\n        <button\n          className=\"filter-categories-btn\"\n          key={ index }\n          type=\"button\"\n          name={ category.strCategory }\n          data-testid={ `${category.strCategory}-category-filter` }\n          onClick={ onClick }\n        >\n          {category.strCategory}\n        </button>\n      ))}\n      <button\n        className=\"filter-categories-btn recipe-filter-selected\"\n        type=\"button\"\n        name=\"All\"\n        data-testid=\"All-category-filter\"\n        onClick={ () => onAll() }\n      >\n        All\n      </button>\n    </div>\n  );\n}\n\nCategories.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onAll: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Categories;\n","import React from 'react';\n\nfunction FiltersNotFound() {\n  return (\n    <section>\n      <p>Nenhum resultado encontrado.</p>\n    </section>\n  );\n}\n\nexport default FiltersNotFound;\n","import React, { useContext, useEffect, useState } from 'react';\nimport Header from '../../components/Header';\nimport RecipeContext from '../../context/RecipeContext';\nimport Footer from '../../components/Footer';\nimport RecipeCard from '../../components/RecipeCard';\nimport Categories from '../../components/Categories';\nimport FiltersNotFound from '../../components/FiltersNotFound';\n\nimport '../../styles/Menu.css';\n\nconst selectedFilterClass = 'recipe-filter-selected';\n\nfunction Food() {\n  const {\n    meal, fetchMeal, setPage, fetchCategories, categories, filter, setFilter,\n  } = useContext(RecipeContext);\n  const [selected, setSelected] = useState({ name: '', state: false });\n\n  useEffect(() => {\n    setPage('comidas');\n    if (filter === '') {\n      fetchMeal();\n    } else {\n      fetchMeal('filter', 'i', filter);\n      setFilter('');\n    }\n    fetchCategories('meal', 'meals');\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleClick = ({ target }) => {\n    const { name } = target;\n    if (selected.state === false || (selected.state === true && selected.name !== name)) {\n      fetchMeal('filter', 'c', name);\n      setSelected({ name, state: true });\n      [...target.parentNode.children].forEach(\n        (item) => item.classList.remove(selectedFilterClass),\n      );\n      target.classList.toggle(selectedFilterClass);\n    }\n    if (selected.state === true && selected.name === name) {\n      [...target.parentNode.children].forEach(\n        (item) => item.classList.remove(selectedFilterClass),\n      );\n      target.parentNode.children.All.classList.toggle(selectedFilterClass);\n      fetchMeal();\n      setSelected({ name: '', state: false });\n    }\n  };\n  return (\n    <div>\n      <Header title=\"Comidas\" showSearchBtn />\n      <Categories\n        categories={ categories.meals }\n        onClick={ handleClick }\n        onAll={ fetchMeal }\n      />\n      { (meal !== null)\n        ? <RecipeCard infos={ [meal, 'idMeal', 'strMealThumb', 'strMeal', 'comidas'] } />\n        : <FiltersNotFound /> }\n      <Footer />\n    </div>\n  );\n}\n\nexport default Food;\n","import React, { useEffect, useContext, useState } from 'react';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport RecipeContext from '../../context/RecipeContext';\nimport RecipeCard from '../../components/RecipeCard';\nimport Categories from '../../components/Categories';\nimport FiltersNotFound from '../../components/FiltersNotFound';\n\nimport '../../styles/Menu.css';\nimport '../../App.css';\n\nconst selectedFilterClass = 'recipe-filter-selected';\n\nfunction Drinks() {\n  const {\n    drink, fetchDrink, setPage, fetchCategories, categories, filter, setFilter,\n  } = useContext(RecipeContext);\n  const [selected, setSelected] = useState({ name: '', state: false });\n\n  useEffect(() => {\n    setPage('bebidas');\n    if (filter === '') {\n      fetchDrink();\n    } else {\n      fetchDrink('filter', 'i', filter);\n      setFilter('');\n    }\n    fetchCategories('cocktail', 'drinks');\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleClick = async ({ target }) => {\n    const { name } = target;\n    if (selected.state === false || (selected.state === true && selected.name !== name)) {\n      fetchDrink('filter', 'c', name);\n      setSelected({ name, state: true });\n      [...target.parentNode.children].forEach(\n        (item) => item.classList.remove(selectedFilterClass),\n      );\n      target.classList.toggle(selectedFilterClass);\n    }\n    if (selected.state === true && selected.name === name) {\n      [...target.parentNode.children].forEach(\n        (item) => item.classList.remove(selectedFilterClass),\n      );\n      target.parentNode.children.All.classList.toggle(selectedFilterClass);\n      fetchDrink();\n      setSelected({ name: '', state: false });\n    }\n  };\n\n  return (\n    <div>\n      <Header title=\"Bebidas\" showSearchBtn=\"true\" />\n      <div className=\"menu-categories\">\n        <Categories\n          categories={ categories.drinks }\n          onClick={ handleClick }\n          onAll={ fetchDrink }\n        />\n      </div>\n      { (drink !== null)\n        ? (\n          <RecipeCard\n            infos={ [drink, 'idDrink', 'strDrinkThumb', 'strDrink', 'bebidas'] }\n          />\n        )\n        : <FiltersNotFound /> }\n      <Footer />\n    </div>\n  );\n}\n\nexport default Drinks;\n","import PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport RecipeContext from '../context/RecipeContext';\n\nfunction FavoriteButton({ recipe, type }) {\n  const { page, setPage } = useContext(RecipeContext);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [favoriteRecipes, setFavoriteRecipes] = useState([]);\n\n  useEffect(() => (\n    (!localStorage.getItem('favoriteRecipes'))\n      ? localStorage.setItem('favoriteRecipes', JSON.stringify([]))\n      : setFavoriteRecipes(JSON.parse(localStorage.getItem('favoriteRecipes')))\n  ), []);\n\n  useEffect(() => {\n    switch (type) {\n    case 'Meal': return setPage('comida');\n    case 'Drink': return setPage('bebida');\n    default: return null;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const checkIfIsFavorite = () => {\n    const arrayFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const isFav = arrayFavorites.some(({ id }) => id === recipe[`id${type}`]);\n    setIsFavorite(isFav);\n  };\n\n  useEffect(() => {\n    checkIfIsFavorite();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleClick = () => {\n    const arrayFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (arrayFavorites.some(({ id }) => id === recipe[`id${type}`])) {\n      setFavoriteRecipes(favoriteRecipes.filter(\n        ({ id }) => id !== recipe[`id${type}`],\n      ));\n    } else {\n      setFavoriteRecipes([\n        ...favoriteRecipes,\n        { id: recipe[`id${type}`],\n          type: page,\n          area: (type === 'Drink' ? '' : recipe.strArea),\n          category: recipe.strCategory,\n          alcoholicOrNot: (type === 'Drink' ? recipe.strAlcoholic : ''),\n          name: recipe[`str${type}`],\n          image: recipe[`str${type}Thumb`],\n        },\n      ]);\n    }\n    setIsFavorite(!isFavorite);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isFavorite]);\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={ handleClick }\n        className=\"recipe-page-btn\"\n      >\n        <img\n          src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n          alt=\"botão favoritar\"\n          data-testid=\"favorite-btn\"\n          className=\"favorite-btn-img\"\n        />\n      </button>\n    </div>\n  );\n}\n\nFavoriteButton.propTypes = {\n  recipe: PropTypes.shape({\n    strAlcoholic: PropTypes.string,\n    strArea: PropTypes.string,\n    strCategory: PropTypes.string,\n  }).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default FavoriteButton;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction IngredientsList({ recipe }) {\n  const ingredients = {\n    ingredient: Object.keys(recipe).filter((item) => item.includes('strIngredient')),\n    measure: Object.keys(recipe).filter((item) => item.includes('strMeasure')),\n  };\n\n  return (\n    <div>\n      <h2>Ingredientes</h2>\n      <ul>\n        {\n          ingredients.ingredient.map((item, index) => (\n            recipe[item] !== '' && recipe[item] !== null\n              ? (\n                <li key={ index } data-testid={ `${index}-ingredient-name-and-measure` }>\n                  {`${recipe[item]} - ${recipe[ingredients.measure[index]]}`}\n                </li>\n              )\n              : null\n          ))\n        }\n      </ul>\n    </div>\n  );\n}\n\nIngredientsList.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default IngredientsList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction RecipeInstructions({ recipe }) {\n  return (\n    <div data-testid=\"instructions\">\n      <h2> Instructions</h2>\n      <p>{recipe.strInstructions}</p>\n    </div>\n  );\n}\n\nRecipeInstructions.propTypes = {\n  recipe: PropTypes.shape({\n    strInstructions: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default RecipeInstructions;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\n\nfunction RecomendationCard({ recomendations = [''], type }) {\n  const ARRAY_POSITION_SIX = 6;\n  const sixRecipes = recomendations.slice(0, ARRAY_POSITION_SIX);\n  const [indexCards, setIndexCards] = useState([0, 1]);\n\n  const handleClick = (event) => {\n    const CAROUSEL_INIT = 0;\n    const CAROUSEL_LAST = 5;\n    setIndexCards(indexCards.map((prevNumber) => {\n      switch (event.target.value) {\n      case 'subtract':\n        return prevNumber === CAROUSEL_INIT ? CAROUSEL_LAST : prevNumber - 1;\n      case 'add':\n        return prevNumber === CAROUSEL_LAST ? CAROUSEL_INIT : prevNumber + 1;\n      default:\n        return null;\n      }\n    }));\n  };\n\n  const typeLink = () => (type === 'Meal' ? 'comidas' : 'bebidas');\n\n  return (\n    <div>\n      <h2>Recomendadas</h2>\n      <div className=\"recomendation-card-container\">\n        <button\n          className=\"carousel-btn\"\n          type=\"button\"\n          onClick={ handleClick }\n          value=\"subtract\"\n        >\n          {'<'}\n        </button>\n\n        {sixRecipes.map((recipe, index) => (\n          <Link\n            className=\"cards\"\n            key={ recipe[`id${type}`] }\n            to={ `/${typeLink()}/${recipe[`id${type}`]}` }\n            hidden={ !indexCards.includes(index) }\n          >\n            <Card\n              className=\"card-btn\"\n              id={ index }\n              style={ { borderRadius: '10px' } }\n              data-testid={ `${index}-recomendation-card` }\n            >\n              <Card.Img\n                style={ { borderRadius: '10px' } }\n                className=\"card-image\"\n                src={ recipe[`str${type}Thumb`] }\n                alt=\"food\"\n              />\n              <Card.ImgOverlay className=\"card-title-overlay\">\n                <Card.Title\n                  className=\"card-title\"\n                  data-testid={ `${index}-recomendation-title` }\n                >\n                  <h4>{recipe[`str${type}`] }</h4>\n                </Card.Title>\n              </Card.ImgOverlay>\n            </Card>\n          </Link>\n        ))}\n        <button\n          className=\"carousel-btn\"\n          type=\"button\"\n          onClick={ handleClick }\n          value=\"add\"\n        >\n          {'>'}\n        </button>\n      </div>\n\n    </div>\n  );\n}\n\nRecomendationCard.propTypes = {\n  recomendations: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default RecomendationCard;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clipboardCopy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\n\nfunction ShareButton({ testid, clipBoard }) {\n  const [linkCopy, setLinkCopy] = useState(false);\n\n  const handleClick = () => {\n    clipboardCopy(clipBoard);\n    setLinkCopy(true);\n  };\n\n  useEffect(() => {\n    const TWO_SECONDS = 2000;\n    setTimeout(() => setLinkCopy(false), TWO_SECONDS);\n  }, [linkCopy]);\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={ handleClick }\n        className=\"recipe-page-btn\"\n      >\n        <img\n          src={ shareIcon }\n          alt=\"botão compartilhar\"\n          data-testid={ testid }\n          className=\"favorite-btn-img\"\n        />\n      </button>\n      { linkCopy && <p>Link copiado!</p> }\n    </div>\n  );\n}\n\nShareButton.propTypes = {\n  testid: PropTypes.string.isRequired,\n  clipBoard: PropTypes.string.isRequired,\n};\n\nexport default ShareButton;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction StartButton({ location, inProgress = false, hidden = false }) {\n  const history = useHistory();\n  return (\n    <div>\n      <button\n        hidden={ hidden }\n        className=\"start-recipe-btn\"\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        onClick={ () => history.push(`${location}/in-progress`) }\n      >\n        {inProgress ? 'Continuar Receita' : 'Iniciar Receita'}\n      </button>\n    </div>\n  );\n}\n\nStartButton.propTypes = {\n  location: PropTypes.string.isRequired,\n  inProgress: PropTypes.bool.isRequired,\n  hidden: PropTypes.bool.isRequired,\n};\n\nexport default StartButton;\n","import PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport FavoriteButton from '../../components/FavoriteButton';\nimport IngredientsList from '../../components/IngredientsList';\nimport RecipeInstructions from '../../components/RecipeInstructions';\nimport RecomendationCard from '../../components/RecomendationCard';\nimport ShareButton from '../../components/ShareButton';\nimport StartButton from '../../components/StartButton';\nimport RecipeContext from '../../context/RecipeContext';\n\nfunction FoodRecipes(props) {\n  const { match: { params: { id } } } = props;\n  const history = useHistory();\n  const { fetchMeal, fetchDrink } = useContext(RecipeContext);\n  const [recipe, setRecipe] = useState({});\n  const [recomendations, setRecomendations] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [inProgress, setInProgress] = useState(false);\n\n  const fetchRecipeDetail = async () => {\n    setIsLoading(true);\n    const listMeal = (await fetchMeal('lookup', 'i', id));\n    const listRecomendations = (await fetchDrink('search', 's', ''));\n    setRecomendations(listRecomendations);\n    setRecipe(listMeal[0]);\n    setIsLoading(false);\n  };\n\n  const checkInProgress = () => {\n    if (!localStorage.getItem('inProgressRecipes')) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify(\n        { meals: {}, cocktails: {} },\n      ));\n    } else {\n      const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (!inProgressRecipes.cocktails) inProgressRecipes.cocktails = {};\n      if (!inProgressRecipes.meals) inProgressRecipes.meals = [];\n      setInProgress(Object.keys(inProgressRecipes.meals).some(\n        (progress) => progress === id,\n      ));\n    }\n  };\n\n  useEffect(() => {\n    fetchRecipeDetail();\n    checkInProgress();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const isDone = () => {\n    if (!localStorage.getItem('doneRecipes')) {\n      localStorage.setItem('doneRecipes', JSON.stringify([]));\n    }\n    const checkDone = JSON.parse(localStorage.getItem('doneRecipes'));\n    return checkDone.some((item) => item.id === id);\n  };\n\n  return (\n    <div>\n      {!isLoading && (\n        <div>\n          <img\n            src={ recipe.strMealThumb }\n            alt={ recipe.strMeal }\n            data-testid=\"recipe-photo\"\n            className=\"recipe-img\"\n          />\n          <div className=\"recipe-container\">\n            <div className=\"header-recipe\">\n              <div className=\"header-recipe-title\">\n                <h1 data-testid=\"recipe-title\">{recipe.strMeal}</h1>\n                <h4 data-testid=\"recipe-category\">{ recipe.strCategory }</h4>\n              </div>\n              <div className=\"header-recipe-btn\">\n                <ShareButton\n                  clipBoard={ window.location.href }\n                  testid=\"share-btn\"\n                />\n                <FavoriteButton recipe={ recipe } type=\"Meal\" />\n              </div>\n            </div>\n            <div className=\"recipes-detail\">\n              <IngredientsList recipe={ recipe } />\n              <RecipeInstructions recipe={ recipe } />\n            </div>\n            <h2 data-testid=\"video\">Video</h2>\n            <RecomendationCard recomendations={ recomendations } type=\"Drink\" />\n          </div>\n          <StartButton\n            location={ history.location.pathname }\n            inProgress={ inProgress }\n            hidden={ isDone() }\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nFoodRecipes.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default FoodRecipes;\n","import PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport FavoriteButton from '../../components/FavoriteButton';\nimport IngredientsList from '../../components/IngredientsList';\nimport RecipeInstructions from '../../components/RecipeInstructions';\nimport RecomendationCard from '../../components/RecomendationCard';\nimport ShareButton from '../../components/ShareButton';\nimport StartButton from '../../components/StartButton';\nimport RecipeContext from '../../context/RecipeContext';\n\nfunction DrinkRecipes(props) {\n  const { match: { params: { id } } } = props;\n  const history = useHistory();\n  const { fetchMeal, fetchDrink } = useContext(RecipeContext);\n  const [recipe, setRecipe] = useState([]);\n  const [recomendations, setRecomendations] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [inProgress, setInProgress] = useState(false);\n\n  const fetchRecipeDetail = async () => {\n    setIsLoading(true);\n    const listDrink = (await fetchDrink('lookup', 'i', id));\n    const listRecomendations = (await fetchMeal('search', 's', ''));\n    setRecomendations(listRecomendations);\n    setRecipe(listDrink[0]);\n    setIsLoading(false);\n  };\n\n  const checkInProgress = () => {\n    if (!localStorage.getItem('inProgressRecipes')) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify(\n        { meals: {}, cocktails: {} },\n      ));\n    } else {\n      const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (!inProgressRecipes.meals) inProgressRecipes.meals = {};\n      if (!inProgressRecipes.cocktails) inProgressRecipes.cocktails = [];\n      setInProgress(Object.keys(inProgressRecipes.cocktails).some(\n        (progress) => progress === id,\n      ));\n    }\n  };\n\n  useEffect(() => {\n    fetchRecipeDetail();\n    checkInProgress();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const isDone = () => {\n    if (!localStorage.getItem('doneRecipes')) {\n      localStorage.setItem('doneRecipes', JSON.stringify([]));\n    }\n    const checkDone = JSON.parse(localStorage.getItem('doneRecipes'));\n    return checkDone.some((item) => item.id === id);\n  };\n\n  return (\n    <div>\n      {!isLoading && (\n        <div>\n          <img\n            src={ recipe.strDrinkThumb }\n            alt={ recipe.strDrink }\n            data-testid=\"recipe-photo\"\n            className=\"recipe-img\"\n          />\n          <div className=\"recipe-container\">\n            <div className=\"header-recipe\">\n              <div className=\"header-recipe-title\">\n                <h1 data-testid=\"recipe-title\">{recipe.strDrink}</h1>\n                <h4 data-testid=\"recipe-category\">{ recipe.strAlcoholic }</h4>\n              </div>\n              <div className=\"header-recipe-btn\">\n                <ShareButton\n                  clipBoard={ window.location.href }\n                  testid=\"share-btn\"\n                />\n                <FavoriteButton recipe={ recipe } type=\"Drink\" />\n              </div>\n            </div>\n            <div className=\"recipes-detail\">\n              <IngredientsList recipe={ recipe } />\n              <RecipeInstructions recipe={ recipe } />\n            </div>\n            <RecomendationCard recomendations={ recomendations } type=\"Meal\" />\n          </div>\n          <StartButton\n            location={ history.location.pathname }\n            inProgress={ inProgress }\n            hidden={ isDone() }\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nDrinkRecipes.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default DrinkRecipes;\n","const FOOD_BY_ID = 'https://www.themealdb.com/api/json/v1/1/lookup.php?i=';\n\nasync function fetchFoodById(id) {\n  const fetchURL = await fetch(`${FOOD_BY_ID}${id}`);\n  const data = await fetchURL.json();\n  return data;\n}\n\nexport default fetchFoodById;\n","import React from 'react';\nimport favImageBlack from '../images/blackHeartIcon.svg';\nimport favImageWhite from '../images/whiteHeartIcon.svg';\n\nexport const getFavorites = (id) => {\n  const allFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  if (allFavorites === null) {\n    return favImageWhite;\n  }\n  const itemFound = allFavorites.find((item) => item.id === id);\n  if (itemFound) {\n    return favImageBlack;\n  }\n  return favImageWhite;\n};\n\nexport const handleClick = (history) => {\n  const { location: { pathname } } = history;\n  history.push(`${pathname}/in-progress`);\n};\n\nexport const handleButton = (history) => {\n  const obj = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  if (!obj) {\n    return (\n      <button\n        className=\"fixedbutton\"\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        onClick={ () => handleClick(history) }\n      >\n        Iniciar Receita\n      </button>\n    );\n  }\n  return (\n    <button\n      className=\"fixedbutton\"\n      type=\"button\"\n      data-testid=\"start-recipe-btn\"\n      onClick={ () => handleClick(history) }\n    >\n      Continuar Receita\n    </button>\n  );\n};\n\nexport const handleShare = (setLink, id = '') => {\n  setLink('Link copiado!');\n  let actualLocation;\n  if (id.length) {\n    actualLocation = `${document.location.origin}/${id}`;\n  } else {\n    actualLocation = window.location.href;\n  }\n  const dummy = document.createElement('input');\n  document.body.appendChild(dummy);\n  dummy.value = actualLocation;\n  dummy.select();\n  document.execCommand('copy');\n  document.body.removeChild(dummy);\n};\n\nexport const handleFavoriteAuxiliar = (objSave, setIcon, icon) => {\n  if (icon === favImageWhite) {\n    setIcon(favImageBlack);\n    const actual = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (actual !== null) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([...actual, objSave]));\n    } else {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([objSave]));\n    }\n  } else {\n    setIcon(favImageWhite);\n  }\n};\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport clipboardCopy from 'clipboard-copy';\nimport fetchFoodById from '../../services/foodAPI';\nimport shareImage from '../../images/shareIcon.svg';\nimport { getFavorites, handleFavoriteAuxiliar }\n  from '../../auxiliar/AuxiliarFunctions';\n\nimport '../../styles/RecipeInProgress.css';\n\nfunction FoodinProgress({ history, match: { params: { id } } }) {\n  const auxiliar = () => {\n    const getLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (!getLocalStorage) {\n      return [];\n    }\n    if (Object.keys(getLocalStorage).includes('meals')) {\n      const findItem = [getLocalStorage].find((storage) => Object\n        .keys(storage.meals).includes(id));\n      if (findItem) return getLocalStorage.meals[id];\n      return [];\n    }\n    return [];\n  };\n  const localStorageChecked = auxiliar();\n  const isFavorite = getFavorites(id);\n  const [foodInfo, setFoodInfo] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [disable, setDisable] = useState(true);\n  const [link, setLink] = useState('');\n  const [icon, setIcon] = useState(isFavorite);\n  const [checkArray, setCheckArray] = useState(localStorageChecked);\n\n  useEffect(() => {\n    fetchFoodById(id).then(({ meals }) => setFoodInfo(meals));\n  }, [id]);\n\n  useEffect(() => {\n    if (ingredients.length === 0) {\n      const MAX_INGREDIENT = 20;\n      foodInfo.map((item) => {\n        let arr = [];\n        for (let i = 1; i <= MAX_INGREDIENT; i += 1) {\n          const itemIngredient = `strIngredient${i}`;\n          const itemMeasure = `strMeasure${i}`;\n          if (item[itemIngredient].length === 0) {\n            setIngredients([...arr]);\n            break;\n          }\n          arr = [\n            ...arr,\n            { strMeasure: item[itemMeasure], strIngredient: item[itemIngredient] },\n          ];\n        }\n        return setIngredients(arr);\n      });\n    }\n  });\n\n  const RedirectToRecipesMade = () => {\n    const dateNow = new Date();\n    const formatDate = `${dateNow}`.split(' GMT')[0];\n    const objToSave = foodInfo.map((item) => {\n      let tagFormat;\n      if (item.strTags) {\n        tagFormat = item.strTags.split(', ');\n      } else {\n        tagFormat = [];\n      }\n      const obj = {\n        id: item.idMeal,\n        type: 'comida',\n        area: item.strArea,\n        category: item.strCategory,\n        alcoholicOrNot: '',\n        name: item.strMeal,\n        image: item.strMealThumb,\n        doneDate: formatDate,\n        tags: tagFormat,\n      };\n      return obj;\n    });\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (!doneRecipes) {\n      localStorage.setItem('doneRecipes', JSON.stringify(objToSave));\n    } else {\n      localStorage.setItem('doneRecipes', JSON.stringify([...doneRecipes, ...objToSave]));\n    }\n    history.push('/receitas-feitas');\n  };\n\n  useEffect(() => {\n    function saveInLocal() {\n      let getLocal = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (!getLocal) {\n        const objectStore = {};\n        localStorage.setItem('inProgressRecipes', JSON.stringify(objectStore));\n        getLocal = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      }\n      const objeto = {\n        [id]: checkArray,\n      };\n      localStorage.setItem('inProgressRecipes',\n        JSON.stringify({ ...getLocal, meals: { ...getLocal.meals, ...objeto } }));\n    }\n    saveInLocal();\n  }, [checkArray, id]);\n\n  const riskCompleteds = ({ target: { value, checked } }, index) => {\n    if (checked) {\n      setCheckArray([...checkArray, index]);\n    } else {\n      setCheckArray([...checkArray.filter((item) => item !== index)]);\n    }\n\n    const labelCheckbox = document.querySelectorAll('.label-checkbox');\n    labelCheckbox.forEach((inputs) => {\n      if (inputs.textContent === value) {\n        inputs.classList.toggle('texto-riscado');\n      }\n    });\n  };\n\n  const handleFavorite = () => {\n    const objSave = foodInfo.map((item) => {\n      const obj = {\n        id: item.idMeal,\n        type: 'comida',\n        area: item.strArea,\n        category: item.strCategory,\n        alcoholicOrNot: '',\n        name: item.strMeal,\n        image: item.strMealThumb,\n      };\n      return obj;\n    })[0];\n    handleFavoriteAuxiliar(objSave, setIcon, icon);\n  };\n\n  const handleLinks = () => {\n    setLink('Link copiado!');\n    const actualLocation = String(window.location.href);\n    const a = actualLocation.split('/');\n    const actual = `${a[0]}//${a[1]}${a[2]}/${a[3]}/${a[4]}`;\n    const input = document.createElement('input');\n    document.body.appendChild(input);\n    clipboardCopy(actual);\n    document.body.removeChild(input);\n  };\n\n  const verifyChecked = () => {\n    if (ingredients.length === checkArray.length) setDisable(false);\n    else setDisable(true);\n  };\n\n  useEffect(\n    () => verifyChecked(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [ingredients, checkArray],\n  );\n\n  return (\n    <div className=\"in-progress-container\">\n      { foodInfo.map((food) => {\n        const allFood = (\n          <div key={ food.idMeal }>\n            <img\n              src={ food.strMealThumb }\n              alt={ food.strMeal }\n              data-testid=\"recipe-photo\"\n              className=\"recipe-img\"\n            />\n            <div className=\"in-progress-header-recipe\">\n              <div className=\"header-recipe-title\">\n                <h1 data-testid=\"recipe-title\">{ food.strMeal }</h1>\n                <h4 data-testid=\"recipe-category\">{ food.strCategory }</h4>\n                <p>{ link }</p>\n              </div>\n              <div className=\"header-recipe-btn\">\n                <button\n                  className=\"recipe-page-btn\"\n                  type=\"button\"\n                  data-testid=\"share-btn\"\n                  onClick={ handleLinks }\n                >\n                  <img\n                    className=\"favorite-btn-img\"\n                    src={ shareImage }\n                    alt=\"botao-compartilhar\"\n                  />\n                </button>\n                <button\n                  className=\"recipe-page-btn\"\n                  type=\"button\"\n                  onClick={ handleFavorite }\n                >\n                  <img\n                    className=\"favorite-btn-img\"\n                    src={ icon }\n                    alt=\"icone-de-favoritar\"\n                    data-testid=\"favorite-btn\"\n                  />\n                </button>\n              </div>\n            </div>\n            <div className=\"recipes-checkbox\">\n              <ul>\n                { ingredients.map(({ strMeasure, strIngredient }, index) => {\n                  const ingrID = `${index}-ingredient-step`;\n                  return (\n                    <li key={ index } className=\"list-checkbox\">\n                      <label\n                        data-testid={ ingrID }\n                        htmlFor={ index }\n                        className={ (\n                          checkArray.includes(index)\n                            ? 'inputs-checkbox texto-riscado'\n                            : 'inputs-checkbox') }\n                      >\n                        <input\n                          onChange={ verifyChecked }\n                          checked={ checkArray.includes(index) }\n                          className=\"inputs-checkbox\"\n                          id={ index }\n                          type=\"checkbox\"\n                          value={ `${strMeasure} ${strIngredient}` }\n                          onClick={ (e) => riskCompleteds(e, index) }\n                        />\n                        { ` ${strMeasure} ${strIngredient}` }\n                      </label>\n                    </li>\n                  );\n                }) }\n              </ul>\n            </div>\n            <p\n              className=\"recipe-detail\"\n              data-testid=\"instructions\"\n            >\n              { food.strInstructions }\n            </p>\n          </div>\n        );\n        return allFood;\n      }) }\n      <button\n        className=\"finish-recipe-btn\"\n        disabled={ disable }\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        onClick={ RedirectToRecipesMade }\n      >\n        Finalizar Receita\n      </button>\n    </div>\n  );\n}\n\nFoodinProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default FoodinProgress;\n","const DRINK_BY_ID = 'https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=';\n\nasync function fetchDrinkById(id) {\n  const fetchURL = await fetch(`${DRINK_BY_ID}${id}`);\n  const data = await fetchURL.json();\n  return data;\n}\n\nexport default fetchDrinkById;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport clipboardCopy from 'clipboard-copy';\nimport fetchDrinkById from '../../services/drinkAPI';\nimport shareImage from '../../images/shareIcon.svg';\nimport { getFavorites, handleFavoriteAuxiliar }\n  from '../../auxiliar/AuxiliarFunctions';\nimport '../../styles/RecipeInProgress.css';\n\nfunction DrinkInProgress({ history, match: { params: { id } } }) {\n  const auxiliar = () => {\n    const getLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (!getLocalStorage) {\n      return [];\n    }\n    if (Object.keys(getLocalStorage).includes('cocktails')) {\n      const findItem = [getLocalStorage].find((storage) => Object\n        .keys(storage.cocktails).includes(id));\n      if (findItem) return getLocalStorage.cocktails[id];\n      return [];\n    }\n    return [];\n  };\n  const localStorageChecked = auxiliar();\n  const isFavorite = getFavorites(id);\n  const [drinkInfo, setDrinkInfo] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [disable, setDisable] = useState(true);\n  const [link, setLink] = useState('');\n  const [icon, setIcon] = useState(isFavorite);\n  const [checkArray, setCheckArray] = useState(localStorageChecked);\n\n  useEffect(() => {\n    fetchDrinkById(id).then(({ drinks }) => setDrinkInfo(drinks));\n  }, [id]);\n\n  useEffect(() => {\n    if (ingredients.length === 0) {\n      const MAX_INGREDIENT = 15;\n      drinkInfo.map((item) => {\n        let arr = [];\n        for (let i = 1; i <= MAX_INGREDIENT; i += 1) {\n          const itemIngredient = `strIngredient${i}`;\n          const itemMeasure = `strMeasure${i}`;\n          if (item[itemIngredient] === null || item[itemIngredient].length === 0) {\n            break;\n          }\n          arr = [\n            ...arr,\n            { strMeasure: item[itemMeasure], strIngredient: item[itemIngredient] },\n          ];\n        }\n        return setIngredients(arr);\n      });\n    }\n  });\n  useEffect(() => {\n    function saveInLocal() {\n      let getLocal = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (!getLocal) {\n        const objectStore = {};\n        localStorage.setItem('inProgressRecipes', JSON.stringify(objectStore));\n        getLocal = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      }\n      const objeto = {\n        [id]: checkArray,\n      };\n      localStorage.setItem('inProgressRecipes',\n        JSON.stringify({ ...getLocal, cocktails: { ...getLocal.cocktails, ...objeto } }));\n    }\n    saveInLocal();\n  }, [checkArray, id]);\n  const RedirectToRecipesMade = () => {\n    const dateNow = new Date();\n    const formatDate = `${dateNow}`.split(' GMT')[0];\n    const objToSave = drinkInfo.map((item) => {\n      let tagFormat;\n      if (item.strTags) {\n        tagFormat = item.strTags.split(', ');\n      } else {\n        tagFormat = [];\n      }\n      const obj = {\n        id: item.idDrink,\n        type: 'bebida',\n        area: '',\n        category: item.strCategory,\n        alcoholicOrNot: item.strAlcoholic,\n        name: item.strDrink,\n        image: item.strDrinkThumb,\n        doneDate: formatDate,\n        tags: tagFormat,\n      };\n      return obj;\n    });\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (!doneRecipes) {\n      localStorage.setItem('doneRecipes', JSON.stringify(objToSave));\n    } else {\n      localStorage.setItem('doneRecipes', JSON.stringify([...doneRecipes, ...objToSave]));\n    }\n    history.push('/receitas-feitas');\n  };\n  const riskCompleteds = ({ target: { value, checked } }, index) => {\n    if (checked) {\n      setCheckArray([...checkArray, index]);\n    } else {\n      setCheckArray([...checkArray.filter((item) => item !== index)]);\n    }\n\n    const labelCheckbox = document.querySelectorAll('.label-checkbox');\n    labelCheckbox.forEach((inputs) => {\n      if (inputs.textContent === value) {\n        inputs.classList.toggle('texto-riscado');\n      }\n    });\n  };\n\n  const handleLinks = () => {\n    setLink('Link copiado!');\n    const actualLocation = String(window.location.href);\n    const a = actualLocation.split('/');\n    const actual = `${a[0]}//${a[1]}${a[2]}/${a[3]}/${a[4]}`;\n    const input = document.createElement('input');\n    document.body.appendChild(input);\n    clipboardCopy(actual);\n    document.body.removeChild(input);\n  };\n\n  const verifyChecked = () => {\n    if (ingredients.length === checkArray.length) setDisable(false);\n    else setDisable(true);\n  };\n\n  useEffect(\n    () => verifyChecked(),\n    [ingredients, checkArray],\n  );\n  const handleFavorite = () => {\n    const objSave = drinkInfo.map((item) => {\n      const obj = {\n        id: item.idDrink,\n        type: 'bebida',\n        area: '',\n        category: item.strCategory,\n        alcoholicOrNot: item.strAlcoholic,\n        name: item.strDrink,\n        image: item.strDrinkThumb,\n      };\n      return obj;\n    })[0];\n    handleFavoriteAuxiliar(objSave, setIcon, icon);\n  };\n\n  return (\n    <div className=\"in-progress-container\">\n      { drinkInfo.map((drink) => {\n        const allDrink = (\n          <div key={ drink.idDrink }>\n            <img\n              src={ drink.strDrinkThumb }\n              alt={ drink.strDrink }\n              data-testid=\"recipe-photo\"\n              className=\"recipe-img\"\n            />\n            <div className=\"in-progress-header-recipe\">\n              <div className=\"header-recipe-title\">\n                <h1 data-testid=\"recipe-title\">{ drink.strDrink }</h1>\n                <h4 data-testid=\"recipe-category\">{ drink.strCategory }</h4>\n                <p>{ link }</p>\n              </div>\n              <div className=\"header-recipe-btn\">\n                <button\n                  className=\"recipe-page-btn\"\n                  type=\"button\"\n                  data-testid=\"share-btn\"\n                  onClick={ handleLinks }\n                >\n                  <img\n                    className=\"favorite-btn-img\"\n                    src={ shareImage }\n                    alt=\"botao-compartilhar\"\n                  />\n                </button>\n                <button\n                  className=\"recipe-page-btn\"\n                  type=\"button\"\n                  onClick={ handleFavorite }\n                >\n                  <img\n                    className=\"favorite-btn-img\"\n                    src={ icon }\n                    alt=\"icone-de-favoritar\"\n                    data-testid=\"favorite-btn\"\n                  />\n                </button>\n              </div>\n            </div>\n            <p\n              className=\"recipe-detail\"\n              data-testid=\"instructions\"\n            >\n              { drink.strInstructions }\n            </p>\n          </div>\n        );\n        return allDrink;\n      }) }\n      <div className=\"recipes-checkbox\">\n        <ul>\n          { ingredients.map(({ strMeasure, strIngredient }, i) => {\n            const ingrID = `${i}-ingredient-step`;\n            return (\n              <li key={ i }>\n                <label\n                  data-testid={ ingrID }\n                  htmlFor={ i }\n                  className={ (\n                    checkArray.includes(i)\n                      ? 'inputs-checkbox texto-riscado'\n                      : 'inputs-checkbox') }\n                >\n                  <input\n                    onChange={ verifyChecked }\n                    checked={ checkArray.includes(i) }\n                    className=\"inputs-checkbox\"\n                    id={ i }\n                    type=\"checkbox\"\n                    value={ `${strMeasure} ${strIngredient}` }\n                    onClick={ (e) => riskCompleteds(e, i) }\n                  />\n                  { ` ${strMeasure} ${strIngredient}` }\n                </label>\n              </li>\n            );\n          }) }\n        </ul>\n      </div>\n      <button\n        className=\"finish-recipe-btn\"\n        disabled={ disable }\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        onClick={ RedirectToRecipesMade }\n      >\n        Finalizar Receita\n      </button>\n    </div>\n  );\n}\n\nDrinkInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default DrinkInProgress;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\n\nimport '../../styles/Explore.css';\n\nfunction ExploreMenu() {\n  const history = useHistory();\n  return (\n    <div>\n      <Header title=\"Explorar\" showSearchBtn={ false } />\n      <div className=\"menu-explore\">\n        <button\n          type=\"button\"\n          data-testid=\"explore-food\"\n          onClick={ () => history.push('/explorar/comidas') }\n          className=\"explore-recipe\"\n        >\n          Explorar Comidas\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"explore-drinks\"\n          onClick={ () => history.push('/explorar/bebidas') }\n          className=\"explore-recipe\"\n        >\n          Explorar Bebidas\n        </button>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreMenu;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport RecipeContext from '../../context/RecipeContext';\nimport Footer from '../../components/Footer';\n\nimport '../../styles/Explore.css';\n\nfunction ExploreFoods() {\n  const history = useHistory();\n  const { fetchRandom } = useContext(RecipeContext);\n\n  const handleClick = async () => {\n    const randomRecipe = await fetchRandom('themealdb');\n    history.push(`/comidas/${randomRecipe[0].idMeal}`);\n  };\n\n  return (\n    <div>\n      <Header title=\"Explorar Comidas\" />\n      <div className=\"menu-explore\">\n        <button\n          type=\"button\"\n          data-testid=\"explore-by-ingredient\"\n          onClick={ () => history.push('/explorar/comidas/ingredientes') }\n          className=\"explore-recipe\"\n        >\n          Por Ingredientes\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"explore-by-area\"\n          onClick={ () => history.push('/explorar/comidas/area') }\n          className=\"explore-recipe\"\n        >\n          Por Local de Origem\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"explore-surprise\"\n          onClick={ handleClick }\n          className=\"explore-recipe\"\n        >\n          Me Surpreenda!\n        </button>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoods;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport RecipeContext from '../../context/RecipeContext';\nimport Footer from '../../components/Footer';\n\nimport '../../styles/Explore.css';\n\nfunction ExploreDrinks() {\n  const history = useHistory();\n  const { fetchRandom } = useContext(RecipeContext);\n\n  const handleClick = async () => {\n    const randomRecipe = await fetchRandom('thecocktaildb');\n    history.push(`/bebidas/${randomRecipe[0].idDrink}`);\n  };\n\n  return (\n    <div>\n      <Header title=\"Explorar Bebidas\" />\n      <div className=\"menu-explore\">\n        <button\n          type=\"button\"\n          data-testid=\"explore-by-ingredient\"\n          onClick={ () => history.push('/explorar/bebidas/ingredientes') }\n          className=\"explore-recipe\"\n        >\n          Por Ingredientes\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"explore-surprise\"\n          onClick={ handleClick }\n          className=\"explore-recipe\"\n        >\n          Me Surpreenda!\n        </button>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreDrinks;\n","import PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport RecipeContext from '../context/RecipeContext';\n\nfunction IngredientCard({ list, url }) {\n  const history = useHistory();\n  const { setFilter } = useContext(RecipeContext);\n  const [key, setKey] = useState();\n  const [type, setType] = useState();\n\n  useEffect(() => {\n    setKey(url === 'themealdb' ? 'strIngredient' : 'strIngredient1');\n    setType(url === 'themealdb' ? 'comidas' : 'bebidas');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleClick = async ({ target: { name } }) => {\n    setFilter(name);\n    history.push(`/${type}`);\n  };\n\n  return (\n    <div className=\"menu-ingredients\">\n      <ul>\n        {list.map((item, index) => (\n          <li key={ index } data-testid={ `${index}-ingredient-card` }>\n            <button\n              className=\"ingredient-button\"\n              type=\"button\"\n              name={ `${item[key]}` }\n              onClick={ handleClick }\n            >\n              <img\n                name={ `${item[key]}` }\n                src={ `https://www.${url}.com/images/ingredients/${item[key]}-Small.png` }\n                alt={ `${item[key]}-img` }\n                data-testid={ `${index}-card-img` }\n              />\n              <p data-testid={ `${index}-card-name` }>{item[key]}</p>\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nIngredientCard.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nexport default IngredientCard;\n","import React, { useContext, useEffect, useState } from 'react';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport IngredientCard from '../../components/IngredientCard';\nimport RecipeContext from '../../context/RecipeContext';\n\nimport '../../styles/Explore.css';\n\nfunction ExploreFoodsRecipes() {\n  const { fetchMeal } = useContext(RecipeContext);\n  const [ingredientsList, setIngredientsList] = useState();\n  const [isLoading, setIsloading] = useState(true);\n\n  const fetchIngredients = async () => {\n    setIsloading(true);\n    const INGREDIENTS_LIST_SIZE = 12;\n    const ingredients = await fetchMeal('list', 'i', 'list');\n    setIngredientsList(ingredients.slice(0, INGREDIENTS_LIST_SIZE));\n    setIsloading(false);\n  };\n\n  useEffect(() => {\n    fetchIngredients();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <Header title=\"Explorar Ingredientes\" />\n      <div>\n        {!isLoading && <IngredientCard list={ ingredientsList } url=\"themealdb\" /> }\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreFoodsRecipes;\n","import React, { useContext, useEffect, useState } from 'react';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport IngredientCard from '../../components/IngredientCard';\nimport RecipeContext from '../../context/RecipeContext';\n\nfunction ExploreDrinksRecipes() {\n  const { fetchDrink } = useContext(RecipeContext);\n  const [ingredientsList, setIngredientsList] = useState([]);\n  const [isLoading, setIsloading] = useState(true);\n\n  const fetchIngredients = async () => {\n    setIsloading(true);\n    const INGREDIENTS_LIST_SIZE = 12;\n    const ingredients = await fetchDrink('list', 'i', 'list');\n    // const variable = ingredients.slice(0, INGREDIENTS_LIST_SIZE)\n    setIngredientsList(ingredients.slice(0, INGREDIENTS_LIST_SIZE));\n    setIsloading(false);\n  };\n\n  useEffect(() => {\n    fetchIngredients();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <Header title=\"Explorar Ingredientes\" />\n      {!isLoading && <IngredientCard list={ ingredientsList } url=\"thecocktaildb\" /> }\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreDrinksRecipes;\n","import React, { useContext, useEffect, useState } from 'react';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport RecipeCard from '../../components/RecipeCard';\nimport RecipeContext from '../../context/RecipeContext';\n\nfunction ExploreByPlaces() {\n  const { meal, fetchMeal } = useContext(RecipeContext);\n  const [areas, setAreas] = useState([]);\n  const [selectValue, setSelectValue] = useState('All');\n\n  const getAreas = async () => {\n    const fetchAreas = await fetchMeal('list', 'a', 'list');\n    // fetchAreas.unshift({ strArea: 'All' });\n    setAreas(fetchAreas);\n  };\n\n  const handleSelect = async ({ target: { value } }) => {\n    if (value === 'All') {\n      await fetchMeal();\n    } else {\n      await fetchMeal('filter', 'a', value);\n    }\n    setSelectValue(value);\n  };\n\n  useEffect(() => {\n    getAreas();\n    fetchMeal();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <Header title=\"Explorar Origem\" showSearchBtn=\"true\" />\n      {areas.length > 0\n        && (\n          <select\n            data-testid=\"explore-by-area-dropdown\"\n            className=\"explore-dropdown\"\n            title={ areas[0].strArea }\n            value={ selectValue }\n            onChange={ handleSelect }\n          >\n            <option data-testid=\"All-option\">All</option>\n            {areas.map(({ strArea }, index) => (\n              <option\n                key={ index }\n                data-testid={ `${strArea}-option` }\n                value={ strArea }\n              >\n                {strArea}\n              </option>\n            ))}\n          </select>\n        )}\n      { meal !== null\n      && <RecipeCard\n        infos={ [meal, 'idMeal', 'strMealThumb', 'strMeal', 'comidas'] }\n      />}\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreByPlaces;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport profileIcon from '../../images/profileIcon.svg';\n\nimport '../../styles/Profile.css';\n\nfunction Profile() {\n  if (!localStorage.getItem('user')) {\n    localStorage.setItem('user', JSON.stringify([]));\n  }\n  const localEmail = JSON.parse(localStorage.getItem('user'));\n  const history = useHistory();\n\n  const handleClick = () => {\n    localStorage.clear();\n    history.push('/');\n  };\n\n  return (\n    <div>\n      <Header title=\"Perfil\" />\n      <div className=\"profile-container\">\n        <img src={ profileIcon } alt=\"profile\" className=\"profile-img\" />\n        <h3 data-testid=\"profile-email\">{localEmail.email}</h3>\n        <div className=\"profile-btn-container\">\n          <button\n            className=\"profile-btn\"\n            type=\"button\"\n            data-testid=\"profile-done-btn\"\n            onClick={ () => history.push('/receitas-feitas') }\n          >\n            Receitas Feitas\n          </button>\n          <button\n            className=\"profile-btn\"\n            type=\"button\"\n            data-testid=\"profile-favorite-btn\"\n            onClick={ () => history.push('/receitas-favoritas') }\n          >\n            Receitas Favoritas\n          </button>\n          <button\n            className=\"profile-btn sair-btn\"\n            type=\"button\"\n            data-testid=\"profile-logout-btn\"\n            onClick={ handleClick }\n          >\n            Sair\n          </button>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport ShareButton from '../../components/ShareButton';\nimport Header from '../../components/Header';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\n\nimport '../../styles/Favorites.css';\nimport '../../App.css';\n\nfunction Favorites() {\n  const [recipeFilter, setRecipesFilter] = useState([]);\n  const [render, setRender] = useState(false);\n  if (!localStorage.getItem('favoriteRecipes')) {\n    localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n  }\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  const handlecliclAll = () => {\n    setRecipesFilter(favoriteRecipes);\n  };\n\n  const handleClickFood = () => {\n    const filterFood = favoriteRecipes.filter((recipe) => (recipe.type === 'comida'));\n    setRecipesFilter(filterFood);\n  };\n\n  const handleClickDrinks = () => {\n    const filterDrinks = favoriteRecipes.filter((recipe) => (recipe.type === 'bebida'));\n    setRecipesFilter(filterDrinks);\n  };\n\n  const handleFavorite = (event) => {\n    const removeFav = favoriteRecipes.filter((recipe) => (recipe.id !== event.target.id));\n    setRecipesFilter(removeFav);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(removeFav));\n    setRender(true);\n  };\n  // só irei atualizar novamente o estado com o favorite recipes caso o render seja alterado.\n  // e o render só será alterado justamente caso eu altere meus favoritos\n  useEffect(() => setRecipesFilter(favoriteRecipes), [render]);\n\n  return (\n    <section>\n      <Header title=\"Receitas Favoritas\" />\n      <div className=\"menu-favorites\">\n        <button\n          type=\"button\"\n          onClick={ handlecliclAll }\n          data-testid=\"filter-by-all-btn\"\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          onClick={ handleClickFood }\n          data-testid=\"filter-by-food-btn\"\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          onClick={ handleClickDrinks }\n          data-testid=\"filter-by-drink-btn\"\n        >\n          Drinks\n        </button>\n\n        {recipeFilter.map((rec, index) => (\n          <div key={ rec.id }>\n            <Link\n              key={ rec.id }\n              to={ `/${rec.type}s/${rec.id}` }\n            >\n              <img\n                className=\"recipeImg\"\n                src={ rec.image }\n                alt={ rec.name }\n                data-testid={ `${index}-horizontal-image` }\n              />\n            </Link>\n            <div>\n              <ShareButton\n                clipBoard={ (`http://localhost:3000/${rec.type}s/${rec.id}`) }\n                testid={ `${index}-horizontal-share-btn` }\n              />\n              <button\n                type=\"button\"\n                onClick={ handleFavorite }\n                image={ blackHeartIcon }\n              >\n                <img\n                  alt=\"liked\"\n                  // data-testid=\"favorite-btn\"\n                  src={ blackHeartIcon }\n                  id={ rec.id }\n                  data-testid={ `${index}-horizontal-favorite-btn` }\n                />\n              </button>\n            </div>\n            <Link\n              key={ rec.id }\n              to={ `/${rec.type}s/${rec.id}` }\n            >\n              {/* <h2>{rec.name}</h2> */}\n            </Link>\n            <h4 data-testid={ `${index}-horizontal-top-text` }>\n              {rec.area\n                ? `${rec.area} - ${rec.category}` : `${rec.alcoholicOrNot}`}\n            </h4>\n            <Link\n              key={ rec.id }\n              to={ `/${rec.type}s/${rec.id}` }\n            >\n              <h2\n                data-testid={ `${index}-horizontal-name` }\n                className=\"horizontal-name\"\n              >\n                {rec.name}\n              </h2>\n            </Link>\n          </div>\n        )) }\n      </div>\n    </section>\n  );\n}\n\nexport default Favorites;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport ShareButton from '../../components/ShareButton';\n\nimport '../../styles/MadeRecipes.css';\n\nfunction MadeRecipes() {\n  const [recipesFilter, setRecipesFilter] = useState([]);\n  console.log(recipesFilter);\n  if (!localStorage.getItem('doneRecipes')) {\n    localStorage.setItem('doneRecipes', JSON.stringify([]));\n  }\n  const madeRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n\n  const handlecliclAll = () => {\n    setRecipesFilter(madeRecipes);\n  };\n\n  const handleClickFood = () => {\n    const filterFood = madeRecipes.filter((recipe) => (recipe.type === 'comida'));\n    setRecipesFilter(filterFood);\n  };\n\n  const handleClickDrinks = () => {\n    const filterDrinks = madeRecipes.filter((recipe) => (recipe.type === 'bebida'));\n    setRecipesFilter(filterDrinks);\n  };\n\n  useEffect(() => setRecipesFilter(madeRecipes), []);\n\n  return (\n    <div>\n      <Header title=\"Receitas Feitas\" />\n      <div className=\"menu-made-recipes\">\n        <button\n          type=\"button\"\n          onClick={ handlecliclAll }\n          data-testid=\"filter-by-all-btn\"\n        >\n          All\n        </button>\n        <button\n          type=\"button\"\n          onClick={ handleClickFood }\n          data-testid=\"filter-by-food-btn\"\n        >\n          Food\n        </button>\n        <button\n          type=\"button\"\n          onClick={ handleClickDrinks }\n          data-testid=\"filter-by-drink-btn\"\n        >\n          Drinks\n        </button>\n        { recipesFilter !== null ? recipesFilter.map((recipe, index) => (\n          <div className=\"cards-recipe-made\" key={ recipe.id }>\n            <Link\n              key={ recipe.id }\n              to={ `/${recipe.type}s/${recipe.id}` }\n            >\n              <img\n                data-testid={ `${index}-horizontal-image` }\n                src={ recipe.image }\n                alt={ recipe.name }\n                className=\"recipe-img\"\n              />\n            </Link>\n            <div>\n              <h4\n                data-testid={ `${index}-horizontal-top-text` }\n              >\n                {recipe.area\n                  ? `${recipe.area} - ${recipe.category}` : `${recipe.alcoholicOrNot}`}\n              </h4>\n              <Link\n                key={ recipe.id }\n                to={ `/${recipe.type}s/${recipe.id}` }\n              >\n                <h2 data-testid={ `${index}-horizontal-name` }>{recipe.name}</h2>\n              </Link>\n              <p data-testid={ `${index}-horizontal-done-date` }>{recipe.doneDate}</p>\n              <ShareButton\n                clipBoard={ (`http://localhost:3000/${recipe.type}s/${recipe.id}`) }\n                testid={ `${index}-horizontal-share-btn` }\n              />\n              {recipe.tags.length > 0\n                ? recipe.tags.map((tag) => (\n                  <span\n                    key={ tag }\n                    data-testid={ `${index}-${tag}-horizontal-tag` }\n                  >\n                    {tag}\n                  </span>))\n                : null}\n            </div>\n          </div>\n        )) : <p>Nenhuma receita finalizada!</p> }\n      </div>\n    </div>\n  );\n}\n\nexport default MadeRecipes;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <main>\n      Not Found\n    </main>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport RecipeProvider from './context/RecipeProvider';\nimport Login from './pages/Login';\nimport Food from './pages/Foods/Food';\nimport Drinks from './pages/Drinks/Drinks';\nimport FoodRecipes from './pages/Foods/FoodRecipes';\nimport DrinkRecipes from './pages/Drinks/DrinkRecipes';\nimport FoodInProgress from './pages/Foods/FoodInProgress';\nimport DrinkInProgress from './pages/Drinks/DrinkInProgress';\nimport ExploreMenu from './pages/Explore/ExploreMenu';\nimport ExploreFoods from './pages/Explore/ExploreFoods';\nimport ExploreDrinks from './pages/Explore/ExploreDrinks';\nimport ExploreFoodsRecipes from './pages/Explore/ExploreFoodsRecipes';\nimport ExploreDrinksRecipes from './pages/Explore/ExploreDrinksRecipes';\nimport ExploreByPlaces from './pages/Explore/ExploreByPlaces';\nimport Profile from './pages/Profile/Profile';\nimport Favorites from './pages/Profile/Favorites';\nimport MadeRecipes from './pages/Profile/MadeRecipes';\nimport NotFound from './pages/NotFound';\n// import './App.css';\nimport './styles/RecipePage.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <RecipeProvider>\n        <Switch>\n          <Route exact path=\"/recipes-app\" component={ Login } />\n          <Route exact path=\"/comidas\" component={ Food } />\n          <Route exact path=\"/bebidas\" component={ Drinks } />\n          <Route exact path=\"/comidas/:id\" component={ FoodRecipes } />\n          <Route exact path=\"/bebidas/:id\" component={ DrinkRecipes } />\n          <Route\n            exact\n            path=\"/comidas/:id/in-progress\"\n            component={ FoodInProgress }\n          />\n          <Route\n            path=\"/bebidas/:id/in-progress\"\n            component={ DrinkInProgress }\n          />\n          <Route exact path=\"/explorar\" component={ ExploreMenu } />\n          <Route exact path=\"/explorar/comidas\" component={ ExploreFoods } />\n          <Route exact path=\"/explorar/bebidas\" component={ ExploreDrinks } />\n          <Route\n            path=\"/explorar/comidas/ingredientes\"\n            component={ ExploreFoodsRecipes }\n          />\n          <Route\n            exact\n            path=\"/explorar/bebidas/ingredientes\"\n            component={ ExploreDrinksRecipes }\n          />\n          <Route exact path=\"/explorar/comidas/area\" component={ ExploreByPlaces } />\n          <Route exact path=\"/perfil\" component={ Profile } />\n          <Route path=\"/receitas-feitas\" component={ MadeRecipes } />\n          <Route path=\"/receitas-favoritas\" component={ Favorites } />\n          <Route to=\"\" component={ NotFound } />\n        </Switch>\n      </RecipeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}